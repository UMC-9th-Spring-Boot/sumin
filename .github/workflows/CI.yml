name: Spring Boot CI with gradle

on:
  push:
    branches: [ "main", "develop", "feat/**", "feature/**" ]
  pull_request:
    branches: [ "main", "develop" ]
  workflow_dispatch:

# 최소 권한
permissions:
  contents: read

# 같은 브랜치 중복 실행 시 이전 실행 취소
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    # 레포에 Gradle 빌드 파일이 없으면 아예 실행 안 함(불필요한 실패 방지)
    if: ${{ hashFiles('**/build.gradle*', '**/settings.gradle*') != '' }}
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      # 1) 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # 2) JDK 17 설치(Temurin)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 3) Secret로 application.yml 생성(멀티라인 안전)
      - name: Make application.yml from secret
        shell: bash
        run: |
          mkdir -p ./src/main/resources
          cat > ./src/main/resources/application.yml <<'EOF'
          ${{ secrets.APPLICATION_YML }}
          EOF
          sed -i 's/\r$//' ./src/main/resources/application.yml

      # 4) Gradle 액션으로 빌드/테스트
      #    - 레포의 Gradle Wrapper를 자동 감지하여 실행
      #    - 캐시(래퍼/디스트리뷰션/의존성) 자동 관리
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: clean build --no-daemon

      # 5) 테스트 리포트 업로드(항상)
      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-reports
          path: |
            **/build/test-results/test
            **/build/reports/tests/test

      # 6) 실패 시 간단 요약 출력
      - name: Print failed tests (if any)
        if: failure()
        shell: bash
        run: |
          echo "---- Failed Test Classes (if any) ----"
          if ls **/build/test-results/test/*.xml >/dev/null 2>&1; then
            grep -Hn "failure message=" -R **/build/test-results/test/*.xml || true
          else
            echo "No test result XML files found."
          fi
